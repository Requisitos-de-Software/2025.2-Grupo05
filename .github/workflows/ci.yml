name: CI & Deploy

# Eventos bem específicos para evitar duplicação
on:
  push:
    branches: [main] # Push só para main
  pull_request:
    branches: [main, devel] # PRs para main ou devel
    types: [opened, synchronize, reopened]

jobs:
  # ===================================================================
  # JOB ÚNICO: Validação + Deploy Condicional
  # ===================================================================
  ci-and-deploy:
    name: "🔍 CI & Deploy"
    runs-on: ubuntu-latest

    steps:
      - name: 🔦 Checkout
        uses: actions/checkout@v4

      - name: 🧰 Setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: 💾 Instalar dependências
        run: |
          pip install -r requirements.txt
          pip install ruff

      # ============ VALIDAÇÃO ============
      - name: 🎨 Ruff format
        id: ruff-format
        run: ruff format --check .
        continue-on-error: true

      - name: 🛁 Ruff check
        id: ruff-check
        run: ruff check .
        continue-on-error: true

      - name: 🐍 Python syntax
        id: python-syntax
        run: find . -name "*.py" -type f -exec python -m py_compile {} \;
        continue-on-error: true

      - name: 📚 MkDocs build
        id: mkdocs-build
        run: mkdocs build --strict --verbose
        continue-on-error: true

      - name: 📝 MarkdownLint
        id: markdown-lint
        uses: DavidAnson/markdownlint-cli2-action@v15
        with:
          globs: |
            **/*.md
            !site/**
            !node_modules/**
            !venv/**
        continue-on-error: true

      # ============ VERIFICAÇÃO DE ERROS ============
      - name: ❌ Verificar erros e mostrar correções
        if: |
          steps.ruff-format.outcome == 'failure' ||
          steps.ruff-check.outcome == 'failure' ||
          steps.python-syntax.outcome == 'failure' ||
          steps.mkdocs-build.outcome == 'failure' ||
          steps.markdown-lint.outcome == 'failure'
        run: |
          echo "################################################################"
          echo "#         ❌ ERROS ENCONTRADOS - COMO CORRIGIR                  #"
          echo "################################################################"

          if [[ "${{ steps.ruff-format.outcome }}" == "failure" ]]; then
            echo "🦄 Ruff format: ruff format ."
          fi

          if [[ "${{ steps.ruff-check.outcome }}" == "failure" ]]; then
            echo "⭐ Ruff check: ruff check . --fix"
          fi

          if [[ "${{ steps.python-syntax.outcome }}" == "failure" ]]; then
            echo "🐍 Python: python -m py_compile arquivo.py"
          fi

          if [[ "${{ steps.markdown-lint.outcome }}" == "failure" ]]; then
            echo "📝 Markdown: Corrija links vazios [Foto]() e [Link]()"
          fi

          if [[ "${{ steps.mkdocs-build.outcome }}" == "failure" ]]; then
            echo "📚 MkDocs: mkdocs build --strict"
          fi

          echo "################################################################"
          exit 1

      # ============ DEPLOY (SÓ SE TUDO OK E FOR PUSH PARA MAIN) ============
      - name: 🚀 Deploy to GitHub Pages
        if: |
          success() && 
          github.event_name == 'push' && 
          github.ref == 'refs/heads/main'
        run: |
          echo "📚 Fazendo deploy da documentação..."
          mkdocs gh-deploy --force --clean --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ============ NOTIFICAÇÃO DE SUCESSO ============
      - name: ✅ Sucesso
        if: success()
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "✅ Pull Request validado com sucesso!"
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "✅ Deploy realizado com sucesso!"
            echo "📚 Site: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          else
            echo "✅ Validação concluída com sucesso!"
          fi
